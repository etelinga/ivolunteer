<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">
    
    <!-- For mail settings and future properties files -->
    <bean id="propertyConfigurer" class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
        <!-- The servlet contect parameters will override the locals if defined. See ROOT.XML file for settings -->
        <property name="contextOverride" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:mail.properties</value>
                <value>classpath:facebook.properties</value>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>

    <!-- This resolver will use the Tomcat context.xml file for the application to load properties -->
    <bean id="jndiResolver" class="org.actionfeed.util.JndiPropertyResolver"/>
    
    <bean id="facebookService" class="org.actionfeed.service.FacebookService"/>

    <bean id="cacheManager" class="org.actionfeed.service.CacheServiceImpl" autowire="byType"/>

    <bean id="localFacebookService" class="org.actionfeed.service.FacebookServiceLocalhost" autowire="byType"/>

    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="shared" value="true"/>
<!--
        <property name="configLocation"><value>/WEB-INF/ehcache.xml</value></property>
-->
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

    <bean id="baseExceptionResolver" abstract="true" class="org.actionfeed.web.spring.ApplicationExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
                <prop key="org.hibernate.Exception">dataAccessFailure</prop>
            </props>
        </property>
        <property name="defaultErrorView" value="${exception.error.view}"/>
        <property name="failureView" value="${exception.failure.view}"/>
        <property name="warnLogCategory" value="org.actionfeed"/>
        <property name="service" ref="service"/>
    </bean>

</beans>
